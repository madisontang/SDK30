diff --git a/zephyr/drivers/lora/sx126x.c b/zephyr/drivers/lora/sx126x.c
index 835f8ec..2474e85 100644
--- a/zephyr/drivers/lora/sx126x.c
+++ b/zephyr/drivers/lora/sx126x.c
@@ -464,6 +464,7 @@ static int sx126x_lora_init(const struct device *dev)
 }
 
 static DEVICE_API(lora, sx126x_lora_api) = {
+	.init = sx12xx_init,
 	.config = sx12xx_lora_config,
 	.send = sx12xx_lora_send,
 	.send_async = sx12xx_lora_send_async,
diff --git a/zephyr/include/zephyr/drivers/lora.h b/zephyr/include/zephyr/drivers/lora.h
index 2f97dee..b6b4d7f 100644
--- a/zephyr/include/zephyr/drivers/lora.h
+++ b/zephyr/include/zephyr/drivers/lora.h
@@ -123,6 +123,15 @@ struct lora_modem_config {
 typedef void (*lora_recv_cb)(const struct device *dev, uint8_t *data, uint16_t size,
 			     int16_t rssi, int8_t snr, void *user_data);
 
+/**
+ * @brief Initial the LoRa modem
+ *
+ * @param dev     LoRa device
+ * @return 0 on success, negative on error
+ */
+typedef int (*lora_api_init)(const struct device *dev);
+
+
 /**
  * @typedef lora_api_config()
  * @brief Callback API for configuring the LoRa module
@@ -181,6 +190,7 @@ typedef int (*lora_api_test_cw)(const struct device *dev, uint32_t frequency,
 				int8_t tx_power, uint16_t duration);
 
 __subsystem struct lora_driver_api {
+	lora_api_init init;
 	lora_api_config config;
 	lora_api_send send;
 	lora_api_send_async send_async;
@@ -191,6 +201,23 @@ __subsystem struct lora_driver_api {
 
 /** @endcond */
 
+/**
+ * @brief Configure the LoRa modem
+ *
+ * @param dev     LoRa device
+ * @param config  Data structure containing the intended configuration for the
+                  modem
+ * @return 0 on success, negative on error
+ */
+static inline int lora_init(const struct device *dev)
+{
+        const struct lora_driver_api *api =
+                (const struct lora_driver_api *)dev->api;
+
+        return api->init(dev);
+}
+
+
 /**
  * @brief Configure the LoRa modem
  *
